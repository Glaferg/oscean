<h3>C Integration</h3>

<pre>
typedef unsigned char Uint8;
Uint8 chrbuf[HOR * VER * 16];
fread(chrbuf, sizeof(chrbuf), 1, f)
fwrite(chrbuf, sizeof(chrbuf), 1, f)
</pre>

<h3>Read/Write</h3>

<pre>
void
putchr(Uint8 *chrbuf, int row, int col, int color)
{
	if(row < 0 || row > SZ - 8)
		return;
	if(color == 0 || color == 2)
		chrbuf[row] &= ~(1UL << (7 - col));
	else
		chrbuf[row] |= 1UL << (7 - col);
	if(color == 0 || color == 1)
		chrbuf[row + 8] &= ~(1UL << (7 - col));
	else
		chrbuf[row + 8] |= 1UL << (7 - col);
}

void
exportchr(void)
{
	int h, v, x, y;
	Uint8 chrbuf[SZ];
	FILE *f = fopen("export.chr", "wb");
	for(v = 0; v < VER; ++v)
		for(h = 0; h < HOR; ++h)
			for(y = 0; y < 8; ++y)
				for(x = 0; x < 8; ++x)
					putchr(chrbuf,
						y + (h + v * HOR) * 16,
						x,
						colortheme(getpixel(pixels, h * 8 + x, v * 8 + y)));
	if(!fwrite(chrbuf, sizeof(chrbuf), 1, f))
		error("Save", "Export failure");
	fclose(f);
	puts("Export complete");
}
</pre>

<h3>Writing an icon</h3>

<p>Icons are 8x8 monochrome bit maps, or half of a chr.</p>

<pre>
Uint8 icon[8] = {0x38, 0x7c, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x00};
</pre>

<p>Icons can be drawn like: </p>

<pre>
void
drawicon(Uint32 *dst, int x, int y, Uint8 *icon, int fg, int bg)
{
	int v, h;
	for(v = 0; v < 8; v++)
		for(h = 0; h < 8; h++) {
			int clr = (icon[v] >> (7 - h)) & 0x1;
			putpixel(dst, x + h, y + v, clr == 1 ? fg : bg);
		}
}
</pre>